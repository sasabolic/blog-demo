buildscript {
	ext {
		springBootVersion = '2.0.0.BUILD-SNAPSHOT'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'io.sixhours.blog.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.apache.kafka:kafka-clients:0.11.0.1')
    compile('org.apache.avro:avro:1.8.2')
    compile('com.twitter:bijection-avro_2.11:0.9.6')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.hamcrest:hamcrest-all:1.3')

}

task buildDocker(type: Exec) {
	doFirst {
		copy {
			from "src/main/docker/"
			into "build/docker/"
			include "*"
		}
		copy {
			from "build/libs"
			into "build/docker/"
			include "*.jar*"
		}
	}
	commandLine 'docker', 'image', 'build', '-f', 'build/docker/Dockerfile', '-t', project.name, 'build/docker/'
}

buildDocker.dependsOn build

configurations {
	integrationTestCompile.extendsFrom testCompile
	integrationTestRuntime.extendsFrom testRuntime
}

sourceSets {
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/integration-test/java')
		}
		resources.srcDir file('src/integration-test/resources')
	}
}

idea {
	module {
		testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
		testSourceDirs += project.sourceSets.integrationTest.resources.srcDirs
	}
}

task integrationTest(type: Test) {
	testClassesDirs = sourceSets.integrationTest.output
	classpath = sourceSets.integrationTest.runtimeClasspath
}